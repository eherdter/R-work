theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=16),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=16),
axis.text.y=element_text(family= "Times New Roman", colour="black", size=16),
legend.text=element_text(family= "Times New Roman", size=14),
legend.title=element_text(family="Times New Roman", size=14, vjust=1))
## DIS
Dis3df<- as.data.frame(Dis3$cor.mat)
Dis4df<- as.data.frame(Dis4$cor.mat)
Dis5df<- as.data.frame(Dis5$cor.mat)
Dis6df <-as.data.frame(Dis6$cor.mat)
cormatD<-cbind(Dis3df[2:18,1],Dis4df[2:18,1],Dis5df[2:18,1],Dis6df[2:18,1])  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enDisiro corr
colnames(cormatD) <- c("3", "4", "5", "6")
row.names(cormatD) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
cormatD.m <- melt(cormatD)
cormatD.m$X1<- factor(cormatD.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatD.m$X2 <- factor(cormatD.m$X2, levels=c("3", "4", "5", "6"))
Dcor<-ggplot(cormatD.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("River Discharge")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=16),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=16), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=16),
legend.text=element_text(family= "Times New Roman"),
legend.position="none")  # only keep the legend for the V winds so we only need one legend on the plot
## SLA
SLA3df<- as.data.frame(SLA3$cor.mat)
SLA4df<- as.data.frame(SLA4$cor.mat)
SLA5df<- as.data.frame(SLA5$cor.mat)
SLA6df <-as.data.frame(SLA6$cor.mat)
cormatSLA<-cbind(SLA3df[2:18,1],SLA4df[2:18,1],SLA5df[2:18,1],SLA6df[2:18,1])  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enSLAiro corr
colnames(cormatSLA) <- c("3", "4", "5", "6")
row.names(cormatSLA) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
cormatSLA.m <- melt(cormatSLA)
cormatSLA.m$X1<- factor(cormatSLA.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatSLA.m$X2 <- factor(cormatSLA.m$X2, levels=c("3", "4", "5", "6"))
SLAcor<- ggplot(cormatSLA.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("SLA")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=16),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1,size=16), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=16),
legend.text=element_text(family= "Times New Roman"),
legend.position="none")
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
# How to share a legend between all 4 ggplots... I edited the code where you specify which plot to take the legend from. Since I already specified the legend title in plot 2 I decided to chose this one as the plot to extract legend from.
library(ggplot2)
library(gridExtra)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[2]] + theme(legend.position="top", legend.text=element_text(size=12,angle=60), legend.title=element_text(size=16, hjust=-3)))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 1449, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 2175, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
SLAcor<- ggplot(cormatSLA.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("SLA")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1,size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none")
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
# How to share a legend between all 4 ggplots... I edited the code where you specify which plot to take the legend from. Since I already specified the legend title in plot 2 I decided to chose this one as the plot to extract legend from.
library(ggplot2)
library(gridExtra)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[2]] + theme(legend.position="top", legend.text=element_text(size=12,angle=60), legend.title=element_text(size=16, hjust=-3)))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 2175, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
# V Winds
VW3df<- as.data.frame(VW3$cor.mat)
VW4df<- as.data.frame(VW4$cor.mat)
VW5df<- as.data.frame(VW5$cor.mat)
VW6df <-as.data.frame(VW6$cor.mat)
cormatV<-cbind(VW3df[2:18,1],VW4df[2:18,1],VW5df[2:18,1],VW6df[2:18,1])  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enviro corr
colnames(cormatV) <- c("3", "4", "5", "6")
row.names(cormatV) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
cormatV.m <- melt(cormatV)
cormatV.m$X1<- factor(cormatV.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatV.m$X2 <- factor(cormatV.m$X2, levels=c("3", "4", "5", "6"))
Vcor<-ggplot(cormatV.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(name="Correlation\nCoefficients", limits=c(-0.75,0.75), breaks=seq(-0.60,0.60,0.3), low="white", high="red")+
xlab("V winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18),
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman", size=14),
legend.title=element_text(family="Times New Roman", size=14, vjust=1))
## DIS
Dis3df<- as.data.frame(Dis3$cor.mat)
Dis4df<- as.data.frame(Dis4$cor.mat)
Dis5df<- as.data.frame(Dis5$cor.mat)
Dis6df <-as.data.frame(Dis6$cor.mat)
cormatD<-cbind(Dis3df[2:18,1],Dis4df[2:18,1],Dis5df[2:18,1],Dis6df[2:18,1])  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enDisiro corr
colnames(cormatD) <- c("3", "4", "5", "6")
row.names(cormatD) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
cormatD.m <- melt(cormatD)
cormatD.m$X1<- factor(cormatD.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatD.m$X2 <- factor(cormatD.m$X2, levels=c("3", "4", "5", "6"))
Dcor<-ggplot(cormatD.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("River Discharge")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none")  # only keep the legend for the V winds so we only need one legend on the plot
## SLA
SLA3df<- as.data.frame(SLA3$cor.mat)
SLA4df<- as.data.frame(SLA4$cor.mat)
SLA5df<- as.data.frame(SLA5$cor.mat)
SLA6df <-as.data.frame(SLA6$cor.mat)
cormatSLA<-cbind(SLA3df[2:18,1],SLA4df[2:18,1],SLA5df[2:18,1],SLA6df[2:18,1])  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enSLAiro corr
colnames(cormatSLA) <- c("3", "4", "5", "6")
row.names(cormatSLA) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
cormatSLA.m <- melt(cormatSLA)
cormatSLA.m$X1<- factor(cormatSLA.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatSLA.m$X2 <- factor(cormatSLA.m$X2, levels=c("3", "4", "5", "6"))
SLAcor<- ggplot(cormatSLA.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+
scale_y_discrete(expand=c(0,0))+
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red")+
xlab("SLA")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1,size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none")
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
# How to share a legend between all 4 ggplots... I edited the code where you specify which plot to take the legend from. Since I already specified the legend title in plot 2 I decided to chose this one as the plot to extract legend from.
library(ggplot2)
library(gridExtra)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[2]] + theme(legend.position="top", legend.text=element_text(size=12,angle=60), legend.title=element_text(size=16, hjust=-3)))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 2175, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[2]] + theme(legend.position="top", legend.text=element_text(size=14,angle=60), legend.title=element_text(size=16, hjust=-3)))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 2175, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
library(gridExtra)
tiff(file="Correlation Plot.tiff", width=2175, height= 2000, units="px", res=300, pointsize=10)
grid_arrange_shared_legend(Ucor,Vcor,Dcor,SLAcor, ncol=2)
dev.off()
UW6 <- rcor.test(df_WindU_6, method = "pearson")
VW6 <- rcor.test(df_WindV_6, method = "pearson")
Dis6 <- rcor.test(df_Discharge_6, method = "pearson")
SLA6 <- rcor.test(df_MSLA_6, method= "pearson")
UW6
UW6
UW6df[1,6,7,9,10,12,13,14,15]=="NA"
UW6df[c(1,6,7,9,10,12,13,14,15)]=="NA"
UW6df[c(1,6,7,9,10,12,13,14,15)]="NA"
UW6df
UW6df <-as.data.frame(UW6$cor.mat)
UW6df[2:18,1]
UW6df[c(1,6,7,9,10,12,13,14,15)]="NA"
UW6df <-as.data.frame(UW6$cor.mat)
UW6df[2:18,1]
UW6df[c(1,6,7,9,10,12,13,14,15)]="NA"
UW6df
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15)]="NA"
sig6U <-corrcof6U[1,6,7,9,10,12,13,14,15]="NA"
corrcof6U
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15)]="NA"
corrcof6u[1]
corrcof6U[1]
sig6U <-corrcof6U[c(,1,6,7,9,10,12,13,14,15)]="NA"
sig6U <-corrcof6U[c(,1,6,7,9,10,12,13,14,15)]="NA"
sig6U <-corrcof6U[1,6,7,9,10,12,13,14,15]="NA"
sig6U <-corrcof6U[1,6,7,9,10,12,13,14,15] <-"NA"
sig6U <-corrcof6U[1,6,7,9,10,12,13,14,15,] <-"NA"
sig6U <-corrcof6U[1,6,7,9,10,12,13,14,15,] <-2
sig6U <-corrcof6U[1] <- "NA" #6,7,9,10,12,13,14,15,] <-NA
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15),] <-NA
sig6U <-corrcof6U[c(1,6)] <-NA
str(corrcof6U)
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15)] <-NA
sig6U
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15)] <-NA
sig6U
UW6 <- rcor.test(df_WindU_6, method = "pearson")
VW6 <- rcor.test(df_WindV_6, method = "pearson")
Dis6 <- rcor.test(df_Discharge_6, method = "pearson")
SLA6 <- rcor.test(df_MSLA_6, method= "pearson")
## Using manually made correlation matrices from above plots to make a correlation plot
#http://stackoverflow.com/questions/5453336/plot-correlation-matrix-into-a-graph
#http://stackoverflow.com/questions/12774210/how-do-you-specifically-order-ggplot2-x-axis-instead-of-alphabetical-order
#http://stackoverflow.com/questions/2805885/margin-adjustments-when-using-ggplots-geom-tile
#https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/
# U winds
UW3df<- as.data.frame(UW3$cor.mat)
UW4df<- as.data.frame(UW4$cor.mat)
UW5df<- as.data.frame(UW5$cor.mat)
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[c(1,6,7,9,10,12,13,14,15)] <-NA
sig6U
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[c(1,6,7)] <- "NA"
sig6U
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[,c(1,6,7)] <- "NA" #,9,10,12,13,14,15)] <-NA
corrcof6U
sig6U <-corrcof6U[c(1,6,7)] <- "NA"
sig6U
corrcof6U<-UW6df[2:18,1]
sig6U <-corrcof6U[,c(1,6,7)] <- "NA" #,9,10,12,13,14,15)] <-NA
sig6U <-corrcof6U[:,c(1,6,7)] <- "NA" #,9,10,12,13,14,15)] <-NA
corrcof6U[6]
corrcof[c(1,6,7)]
corrcof6U[c(1,6,7)]
sig6U <-corrcof6U[c(1,6,7)] <- "NA" #,9,10,12,13,14,15)] <-NA
sig6U
corrcof6U[c(1,6,7)] <- "NA" #,9,10,12,13,14,15)] <-NA
corrcof6U
corrcof6U[c(1,6,7,9,10,12,13,14,15)] <- "NA"
corrcof6U
UW3df
UW3
UW4
UW5
# U winds
UW3df<- as.data.frame(UW3$cor.mat)
corrcof3U<-UW3df[2:18,1] #selecting the first column
corrcof3U[c(1,2,3,9)] <- "NA" #removing non significant corr coeffs
UW4df<- as.data.frame(UW4$cor.mat)
corrcof4U<-UW4df[2:18,1] #selecting the first column
corrcof4U[c(1,4,6,7,9,14,15)] <- "NA" #removing non significant corr coeffs
UW5df<- as.data.frame(UW5$cor.mat)
corrcof5U<-UW5df[2:18,1] #selecting the first column
corrcof5U[c(4,6,7,9,14,15)] <- "NA" #removing non significant corr coeffs
UW6df <-as.data.frame(UW6$cor.mat)
corrcof6U<-UW6df[2:18,1]
corrcof6U[c(1,6,7,9,10,12,13,14,15)] <- "NA"
cormatU<-cbind(corrcof3U, corrcof4U, corrcof5U, corrcof6U)  #combined correlation coefficients for U Winds for 3-6 increments and select only rows with enviro corr
colnames(cormatU) <- c("3", "4", "5", "6")
row.names(cormatU) <-c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May")
library(ggplot2)
library(reshape)
cormatU.m <- melt(cormatU)
cormatU.m$X1<- factor(cormatU.m$X1, levels=c("PJan", "PFeb", "PMar", "PApr", "PMay", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May"))
cormatU.m$X2 <- factor(cormatU.m$X2, levels=c("3", "4", "5", "6"))
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="white", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
cormatU.m
str(cormatU.m)
pp <- function (n,r=4) {
x <- seq(-r*pi, r*pi, len=n)
df <- expand.grid(x=x, y=x)
df$r <- sqrt(df$x^2 + df$y^2)
df$z <- cos(df$r^2)*exp(-df$r/6)
df
}
pp
pp(20)
p <- ggplot(pp(20), aes(x=x,y=y))
p + theme_bw() + geom_tile(aes(fill=z)) + scale_fill_gradient(low="green", high="red", limits=c(-0.1, 0.1))
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
cormatU.m
str(cormatU.m)
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_discrete(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
cormatU
cormatU.m
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_continous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_continuous(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
Ucor<- ggplot(cormatU.m, aes(X1,X2, fill=value))+
geom_tile()+
scale_x_discrete(expand=c(0,0), breaks=c("PJan", "PMar", "PMay", "Jul", "Sep", "Nov", "Jan", "Mar", "May"))+ #only display those lables on x axis
scale_y_discrete(expand=c(0,0))+  ## expand fills the y aixs completely to the outermost portion of the plot. So it effectively stretches it as tall as it can go
scale_fill_gradient2(limits=c(-0.75,0.75), breaks=seq(-0.75,0.75,0.25), low="green", high="red", na.value="transparent")+
xlab("U winds")+
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(family="Times New Roman", colour="black", size=18),
axis.text.x=element_text(family= "Times New Roman", colour="black",  angle=45, vjust=1, hjust=1, size=18), #use vjust to move axis labels perfectly on tick marks (have to use verticle just because the labels are flipped on their side)
axis.text.y=element_text(family= "Times New Roman", colour="black", size=18),
legend.text=element_text(family= "Times New Roman"),
legend.position="none") #remove legend from all plots except one
Ucor
